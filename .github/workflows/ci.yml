name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_NAME: ahmedschheider/ci-demo

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 🔄 Cloner le code
      uses: actions/checkout@v3

    - name: ⚙️ Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔐 Se connecter à Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: '21'

    - name: 🔧 Rendre mvnw exécutable
      run: chmod +x mvnw

    - name: 🧪 Build du projet avec Maven
      run: ./mvnw clean package -DskipTests

    - name: 🛠️ Build de l’image Docker
      run: docker build -t $IMAGE_NAME:latest .

    - name: 🔍 Scan de sécurité avec Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.IMAGE_NAME }}:latest
        format: 'table'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'HIGH,CRITICAL'

    - name: 🔐 Login to Docker Hub
      run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: 📦 Push vers Docker Hub
      run: docker push $IMAGE_NAME:latest

  deploy:
    name: 🚀 Déploiement sur la VM
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: 📥 Télécharger le dépôt
      uses: actions/checkout@v3

    - name: 📄 Sauvegarder la clé SSH privée
      run: |
        echo "${{ secrets.VM_SSH_KEY }}" > id_rsa
        chmod 600 id_rsa

    - name: 🐳 Lancer le conteneur sur la VM via SSH
      run: |
        ssh -o StrictHostKeyChecking=no -i id_rsa ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} << 'EOF'
          docker pull ahmedschheider/ci-demo:latest
          docker stop springboot-app || true
          docker rm springboot-app || true
          docker run -d --name springboot-app -p 8081:8080 ahmedschheider/ci-demo:latest
        EOF



